// Mocks generated by Mockito 5.4.2 from annotations
// in card_scanner/test/feature_scanner/blocs/scanner_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:card_scanner/base/models/request_model/card_request_model.dart'
    as _i4;
import 'package:card_scanner/base/repositories/card_repository.dart' as _i2;
import 'package:card_scanner/feature_scanner/services/card_validation_service.dart'
    as _i7;
import 'package:card_scanner/lib_card_scanner/card_scanner_service.dart' as _i5;
import 'package:card_scanner/lib_router/blocs/router_bloc.dart' as _i8;
import 'package:card_scanner/lib_router/models/route_data_model.dart' as _i9;
import 'package:credit_card_scanner/credit_card_scanner.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardRepository extends _i1.Mock implements _i2.CardRepository {
  MockCardRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> addCard({required _i4.CardRequestModel? cardModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCard,
          [],
          {#cardModel: cardModel},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [CardScannerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardScannerService extends _i1.Mock
    implements _i5.CardScannerService {
  MockCardScannerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i6.CardDetails?> scanCard() => (super.noSuchMethod(
        Invocation.method(
          #scanCard,
          [],
        ),
        returnValue: _i3.Future<_i6.CardDetails?>.value(),
      ) as _i3.Future<_i6.CardDetails?>);
}

/// A class which mocks [CardValidationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardValidationService extends _i1.Mock
    implements _i7.CardValidationService {
  MockCardValidationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String validateCardNumber(String? cardNumber) => (super.noSuchMethod(
        Invocation.method(
          #validateCardNumber,
          [cardNumber],
        ),
        returnValue: '',
      ) as String);
  @override
  String validateCardHolderName(String? cardHolderName) => (super.noSuchMethod(
        Invocation.method(
          #validateCardHolderName,
          [cardHolderName],
        ),
        returnValue: '',
      ) as String);
  @override
  String validateExpirationDate(String? expDate) => (super.noSuchMethod(
        Invocation.method(
          #validateExpirationDate,
          [expDate],
        ),
        returnValue: '',
      ) as String);
  @override
  String validateCardCVV(String? cardCVV) => (super.noSuchMethod(
        Invocation.method(
          #validateCardCVV,
          [cardCVV],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [RouterBlocEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouterBlocEvents extends _i1.Mock implements _i8.RouterBlocEvents {
  MockRouterBlocEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void go(
    _i9.RouteDataModel? route, {
    Object? extra,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #go,
          [route],
          {#extra: extra},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToLocation(String? location) => super.noSuchMethod(
        Invocation.method(
          #goToLocation,
          [location],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void push(
    _i9.RouteDataModel? route, {
    Object? extra,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #push,
          [route],
          {#extra: extra},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pop([Object? result]) => super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValueForMissingStub: null,
      );
}
